#!/bin/sh

. config/options
get_meta $1

$SCRIPTS/installdev make
$SCRIPTS/installdev sed

do_unselect_opt () {
  sed -i "s%^CONFIG_$1=.*%# CONFIG_$1 is not set%" $LINUX/.config
}

do_unselect () {
  pkg_uses $1 $2 || \
    sed -i "s%^CONFIG_$3=.*%# CONFIG_$3 is not set%" $LINUX/.config
}

#LINUX=`ls -d $ROOT/$BUILD/$1-[0-9]*`
LINUX=`ls -d $ROOT/$BUILD/${PKG_NAME}-${PKG_VERSION}`

case $TARGET_ARCH in
  i386|x86_64)
    TARGET_LINUX_ARCH=$TARGET_ARCH
    ;;
  powerpc|powerpc64)
    TARGET_LINUX_ARCH=powerpc
    ;;
  arm)
    TARGET_LINUX_ARCH=arm
    ;;
  *)
    TARGET_LINUX_ARCH=$TARGET_ARCH
    ;;
esac

# try to guess the appropriate kernel configuration file
KERNEL_CFG_FILE="$CONFIG_MACHINE/$1.conf"

[ ! -f $KERNEL_CFG_FILE ] && \
  KERNEL_CFG_FILE="$CONFIG_PLATFORM/$1.conf"

[ ! -f $KERNEL_CFG_FILE ] && \
  KERNEL_CFG_FILE="$CONFIG_PLATFORM_GENERIC/$1.conf"

if [ ! -f "$KERNEL_CFG_FILE" ]; then
  echo "Unable to find a matching kernel configuration file !!"
  exit 1
fi

echo "Using kernel config from: $KERNEL_CFG_FILE"

sed -i -e "s|^HOSTCC[[:space:]]*=.*$|HOSTCC = $HOST_CC|" \
       -e "s|^HOSTCXX[[:space:]]*=.*$|HOSTCXX = $HOST_CXX|" \
       -e "s|^ARCH[[:space:]]*?=.*$|ARCH = $TARGET_LINUX_ARCH|" \
       -e "s|^CROSS_COMPILE[[:space:]]*?=.*$|CROSS_COMPILE = $TARGET_PREFIX|" \
       $LINUX/Makefile

cp $KERNEL_CFG_FILE $LINUX/.config

if [ "$COMPRESSION_METHOD" = xz ]; then
  do_unselect_opt KERNEL_GZIP
  do_unselect_opt RD_GZIP
elif [ "$COMPRESSION_METHOD" = gzip ]; then
  do_unselect_opt KERNEL_XZ
  do_unselect_opt RD_XZ
  do_unselect_opt SQUASHFS_XZ
  do_unselect_opt XZ_DEC
fi

yes '
' | make -C $LINUX oldconfig
make -C $LINUX prepare1
